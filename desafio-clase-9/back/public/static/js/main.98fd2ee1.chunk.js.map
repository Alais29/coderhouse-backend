{"version":3,"sources":["services/Productos.ts","components/ProductForm.tsx","components/ProductList.tsx","utilities/numbers.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["baseUrl","getProducts","a","axios","get","response","data","saveProduct","newProduct","post","ProductForm","productos","setProductos","useState","title","price","thumbnail","formValues","setFormValues","handleChange","e","target","name","value","className","Form","onSubmit","preventDefault","then","Group","controlId","Label","Control","type","onChange","Button","ProductList","Row","map","producto","Col","xs","sm","md","Card","Img","variant","src","min","max","Math","floor","random","Body","Title","Text","id","App","useEffect","products","Container","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.98fd2ee1.chunk.js","sourcesContent":["import axios from 'axios'\nimport { IItem } from '../interfaces'\nconst baseUrl = '/api/productos'\n\nexport const getProducts = async () => {\n  const response = await axios.get(`${baseUrl}/listar`)\n  return response.data.data\n}\n\nexport const saveProduct = async (newProduct: IItem) => {\n  const response = await axios.post(`${baseUrl}/guardar`, newProduct)\n  return response.data.data\n}","import React, { Dispatch, SetStateAction, useState } from 'react'\nimport { Button, Form } from 'react-bootstrap'\nimport { IItem } from '../interfaces';\nimport { saveProduct } from '../services/Productos';\n\ninterface IProductForm {\n  setProductos: Dispatch<SetStateAction<IItem[]>>\n  productos: IItem[]\n}\n\nconst ProductForm = ({ productos, setProductos }: IProductForm) => {\n  const [formValues, setFormValues] = useState({\n    title: '',\n    price: '',\n    thumbnail: ''\n  });\n\n  const { title, price, thumbnail } = formValues\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setFormValues({\n      ...formValues,\n      [e.target.name]: e.target.value\n    })\n  }\n\n  const handleSubmit = (e: React.ChangeEvent<HTMLFormElement>) => {\n    e.preventDefault()\n    saveProduct(formValues)\n      .then((newProduct) => {\n        setProductos([\n          ...productos,\n          newProduct\n        ])\n        setFormValues({ title: '', price: '', thumbnail: '' })\n      })\n  }\n\n  return (\n    <>\n      <h1 className=\"text-center\">Agrega un producto</h1>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group className=\"mb-3\" controlId=\"title\">\n          <Form.Label>Nombre</Form.Label>\n          <Form.Control type=\"text\" value={title} name=\"title\" onChange={handleChange} />\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"price\">\n          <Form.Label>Precio</Form.Label>\n          <Form.Control type=\"number\" value={price} name=\"price\" onChange={handleChange} />\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"thumbnail\">\n          <Form.Label>URL de imagen</Form.Label>\n          <Form.Control type=\"url\" value={thumbnail} name=\"thumbnail\" onChange={handleChange} />\n        </Form.Group>\n        <Button type=\"submit\" className=\"mb-2\">\n          Guardar\n        </Button>\n      </Form>\n    </>\n  )\n}\n\nexport default ProductForm\n","import { Card, Col, Row } from 'react-bootstrap';\nimport { IItem } from '../interfaces';\nimport { getRandomNumber } from '../utilities/numbers';\n\ninterface IProductList {\n  productos: IItem[]\n}\n\nconst ProductList = ({ productos }: IProductList) => {\n  return (\n    <Row>\n      {productos.map((producto: IItem) => (\n        <Col xs={12} sm={6} md={3} key={producto.id} className=\"mb-4\">\n          <Card>\n            <Card.Img variant=\"top\" src={`${producto.thumbnail}?random=${getRandomNumber(1, 1000)}`} />\n            <Card.Body>\n              <Card.Title>{producto.title}</Card.Title>\n              <Card.Text>${producto.price}</Card.Text>\n            </Card.Body>\n          </Card>\n        </Col>\n      ))}\n    </Row>\n  )\n}\n\nexport default ProductList","export const getRandomNumber = (min: number, max: number) =>  {\n  return Math.floor(Math.random() * (max - min) + min);\n};","import { useState, useEffect } from 'react';\nimport { IItem } from './interfaces';\nimport { getProducts } from './services/Productos';\nimport { Container } from 'react-bootstrap';\nimport ProductForm from './components/ProductForm';\nimport ProductList from './components/ProductList';\n\nconst App = () => {\n  const [productos, setProductos] = useState<IItem[] | []>([])\n\n  useEffect(() => {\n    getProducts()\n      .then(products => {\n        setProductos(products)\n      })\n  }, [])\n\n  return (\n    <Container>\n      <ProductForm productos={productos} setProductos={setProductos} />\n      {productos.length !== 0 &&\n        <ProductList productos={productos} />\n      }\n    </Container>\n  );\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}